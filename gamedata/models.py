from django.db import models

# Create your models here.

class Game(models.Model):
    game_id = models.IntegerField()
    season = models.CharField(max_length=8)
    type = models.CharField(max_length=1)
    date_time = models.DateTimeField(auto_now=False,auto_now_add=False)
    away_team_id = models.IntegerField()
    home_team_id = models.IntegerField()
    away_goals = models.IntegerField()
    home_goals = models.IntegerField()
    outcome = models.CharField(max_length=12)
    home_rink_side_start = models.CharField(max_length=5)
    venue = models.CharField(max_length=30)

class Game_Plays(models.Model):
    play_id = models.CharField(max_length=14)
    game_id = models.IntegerField()
    play_num = models.IntegerField()
    team_id_for = models.IntegerField()
    team_id_against = models.IntegerField()
    event = models.CharField(max_length = 30)
    secondaryType = models.CharField(max_length = 50)
    x = models.IntegerField()
    y = models.IntegerField()
    period = models.IntegerField()
    periodType = models.CharField(max_length = 50)
    periodTime = models.TimeField(auto_now=False, auto_now_add=False)
    periodTimeRemaining = models.TimeField(auto_now=False, auto_now_add=False)
    dateTime = models.DateTimeField(auto_now=False,auto_now_add=False)
    goals_away = models.IntegerField()
    goals_home = models.IntegerField()
    description = models.CharField(max_length = 100)
    st_x = models.IntegerField()
    st_y = models.IntegerField()

class Game_Plays_Players(models.Model):
    play_id = models.CharField(max_length=14)
    game_id = models.IntegerField()
    play_num = models.IntegerField()
    player_id = models.IntegerField()
    player_type =  models.CharField(max_length=10)

class Game_Team_Stats(models.Model):
    game_id =  models.IntegerField()
    team_id =  models.IntegerField()
    goals =  models.IntegerField()
    pim =  models.IntegerField()
    shots =  models.IntegerField()
    powerPlayPercentage =  models.FloatField()
    powerPlayGoals =  models.IntegerField()
    powerPlayOpportunities =  models.IntegerField()
    faceOffWinPercentage =  models.FloatField()
    blocked =  models.IntegerField()
    takeaways =  models.IntegerField()
    giveaways =  models.IntegerField()
    hits =  models.IntegerField()

class Game_Player_Stats(models.Model):
    game_id =  models.IntegerField()
    team_id = models.IntegerField()
    player_id =  models.IntegerField()
    firstName =  models.CharField(max_length = 30)
    lastName =  models.CharField(max_length = 30)
    primaryPosition =models.CharField(max_length = 30)
    timeOnIce =  models.CharField(max_length = 10)
    assists =  models.IntegerField()
    goals =  models.IntegerField()
    shots =  models.IntegerField()
    hits =  models.IntegerField()
    powerPlayGoals = models.IntegerField()
    powerPlayAssists =  models.IntegerField()
    penaltyMinutes =  models.IntegerField()
    faceOffWins =  models.IntegerField()
    faceoffTaken = models.IntegerField()
    takeaways =  models.IntegerField()
    giveaways =  models.IntegerField()
    shortHandedGoals = models.IntegerField()
    shortHandedAssists =  models.IntegerField()
    blocked =  models.IntegerField()
    plusMinus =  models.IntegerField()
    evenTimeOnIce =  models.CharField(max_length = 10)
    powerPlayTimeOnIce =  models.CharField(max_length = 10)
    shortHandedTimeOnIce = models.CharField(max_length = 10)
